# -*- mode: ruby -*-
# vi: set ft=ruby :
# vagrant updates, nesting the Vagrant.configure ruined the setup after rebooting now fixed and working.

$minion = <<MINION
sudo apt-get update
# To pin your Salt upgrades to the Latest Onedir package of Salt for Ubuntu 20.04 (Focal): 
# source from official salt install guide for ubuntu 20.04
mkdir /etc/apt/keyrings
sudo apt-get install curl
sudo curl -fsSL -o /etc/apt/keyrings/salt-archive-keyring-2023.gpg https://repo.saltproject.io/salt/py3/ubuntu/20.04/amd64/SALT-PROJECT-GPG-PUBKEY-2023.gpg
#-fsSL -o options for curl:
# Yhteenvetona, sudo curl -fsSL -o -komento mahdollistaa tiedoston lataamisen etäpalvelimelta curl:n avulla, virheenkäsittelyllä, hiljaisella toiminnolla, uudelleenohjausten seuraamisella sekä ladatun tiedoston tallentamisella määritettyyn sijaintiin.
echo "deb [signed-by=/etc/apt/keyrings/salt-archive-keyring-2023.gpg arch=amd64] https://repo.saltproject.io/salt/py3/ubuntu/20.04/amd64/latest focal main" | sudo tee /etc/apt/sources.list.d/salt.list
sudo apt-get update
sudo apt-get -qy install salt-minion
echo "master: 192.168.12.3">/etc/salt/minion
sudo systemctl enable salt-minion 
sudo systemctl restart salt-minion
echo "See also: https://github.com/DiviXe/Palvelinohjelmoinnin-miniprojekti"
MINION

$master = <<MASTER
sudo apt-get update
mkdir /etc/apt/keyrings
sudo apt-get install curl
sudo curl -fsSL -o /etc/apt/keyrings/salt-archive-keyring-2023.gpg https://repo.saltproject.io/salt/py3/ubuntu/20.04/amd64/SALT-PROJECT-GPG-PUBKEY-2023.gpg
echo "deb [signed-by=/etc/apt/keyrings/salt-archive-keyring-2023.gpg arch=amd64] https://repo.saltproject.io/salt/py3/ubuntu/20.04/amd64/latest focal main" | sudo tee /etc/apt/sources.list.d/salt.list
sudo apt-get update
sudo apt-get -qy install salt-master
sudo systemctl enable salt-master
sudo systemctl start salt-master
sudo mkdir /srv/salt
echo "See also: https://github.com/DiviXe/Palvelinohjelmoinnin-miniprojekti"
MASTER

Vagrant.configure("2") do |config|
  config.vm.box = "generic/ubuntu2004"
  
  config.vm.define "programmer1" do |programmer1|
    programmer1.vm.provision :shell, inline: $minion
    programmer1.vm.hostname = "programmer1"
    programmer1.vm.provider "virtualbox" do |vb|
      vb.memory = 4096 # 4GB RAM
    end
	config.vm.network "private_network", ip: "192.168.33.10"
  end

  config.vm.define "programmer2" do |programmer2|
    programmer2.vm.provision :shell, inline: $minion
    programmer2.vm.hostname = "programmer2"
    programmer2.vm.provider "virtualbox" do |vb|
      vb.memory = 4096 # 4GB RAM
    end
	programmer2.vm.network "private_network", ip: "192.168.12.102"
  end

  config.vm.define "programmerhost", primary: true do |programmerhost|
    programmerhost.vm.provision :shell, inline: $master
    programmerhost.vm.hostname = "programmerhost"
    programmerhost.vm.provider "virtualbox" do |vb|
      vb.memory = 2048 # 2GB RAM
    end
	programmerhost.vm.network "private_network", ip: "192.168.12.3"
  end
end
